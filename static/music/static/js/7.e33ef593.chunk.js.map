{"version":3,"sources":["pages/Play.jsx"],"names":["Play","state","songInfo","playStatus","playUrl","lyric","this","$http","get","params","ids","props","match","id","then","res","setState","songs","al","refs","audio","pause","play","data","url","lyricFmt","lrc","arr","replace","all","first","second","push","getSongDetail","getPlayUrl","getLyric","className","style","transform","src","picUrl","alt","onClick","toggle","name","map","item","index","ref","display","Component"],"mappings":"mPAEqBA,E,4MACjBC,MAAM,CAEFC,SAAS,GAETC,YAAW,EAEXC,QAAQ,GAERC,MAAM,I,mDAGV,WAAgB,IAAD,OACXC,KAAKC,MAAMC,IAAI,eAAe,CAC1BC,OAAO,CACHC,IAAIJ,KAAKK,MAAMC,MAAMH,OAAOI,MAEjCC,MAAK,SAAAC,GACJ,EAAKC,SAAS,CAACd,SAASa,EAAIE,MAAM,GAAGC,U,oBAI7C,WAAS,IAAD,OACJZ,KAAKU,SAAS,CAACb,YAAYG,KAAKL,MAAME,aAAY,WAC3C,EAAKF,MAAME,WACV,EAAKgB,KAAKC,MAAMC,QAEhB,EAAKF,KAAKC,MAAME,Y,wBAM5B,WAAa,IAAD,OACRhB,KAAKC,MAAMC,IAAI,YAAY,CACvBC,OAAO,CAACI,GAAGP,KAAKK,MAAMC,MAAMH,OAAOI,MACpCC,MAAK,SAAAC,GACJ,EAAKC,SAAS,CAACZ,QAAQW,EAAIQ,KAAK,GAAGC,W,sBAK3C,WAAW,IAAD,OACNlB,KAAKC,MAAMC,IAAI,SAAS,CACpBC,OAAO,CAACI,GAAGP,KAAKK,MAAMC,MAAMH,OAAOI,MACpCC,MAAK,SAAAC,GACJ,IAAIV,EAAQ,EAAKoB,SAASV,EAAIW,IAAIrB,OAClC,EAAKW,SAAS,CAACX,MAAMA,S,sBAG7B,SAASA,GACL,IACIsB,EAAM,GAMV,OALAtB,EAAMuB,QAFI,iBAEQ,SAASC,EAAIC,EAAMC,GACnB,KAAXA,GACCJ,EAAIK,KAAKD,MAGVJ,I,uCAGX,WACIrB,KAAK2B,gBACL3B,KAAK4B,aACL5B,KAAK6B,a,oBAET,WAAU,IAAD,OACL,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKA,UAAU,YAAYC,MAAO,CAACC,UAAUhC,KAAKL,MAAME,WAAW,iBAAiB,kBACpF,sBAAKiC,UAAU,WAAf,UACI,qBAAKG,IAAKjC,KAAKL,MAAMC,SAASsC,OAAQC,IAAI,KAC1C,qBAAKC,QAAS,kBAAI,EAAKC,UAAUP,UAAW9B,KAAKL,MAAME,WAAW,YAAY,gBAElF,sBAAKiC,UAAU,UAAf,UACI,6BAAK9B,KAAKL,MAAMC,SAAS0C,OAErBtC,KAAKL,MAAMI,MAAMwC,KAAI,SAACC,EAAKC,GACxB,OAAO,4BAAgBD,GAARC,SAK1B,uBAAOC,IAAI,QAAQT,IAAKjC,KAAKL,MAAMG,QAASiC,MAAO,CAACY,QAAQ,e,kCAIxE,WACI3C,KAAKU,SAAS,WACV,OAAO,O,GAzFekC","file":"static/js/7.e33ef593.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport '../assets/css/play.css'\r\nexport default class Play extends Component {\r\n    state={\r\n        // 音乐详情\r\n        songInfo:{},\r\n        // 播放状态,true表示暂停\r\n        playStatus:true,\r\n        // 音乐播放地址\r\n        playUrl:'',\r\n        // 歌词\r\n        lyric:[]\r\n    }\r\n    // 获取音乐详情\r\n    getSongDetail(){\r\n        this.$http.get('/song/detail',{\r\n            params:{\r\n                ids:this.props.match.params.id\r\n            }\r\n        }).then(res=>{\r\n            this.setState({songInfo:res.songs[0].al})\r\n        })\r\n    }\r\n    // 修改播放状态\r\n    toggle(){\r\n        this.setState({playStatus:!this.state.playStatus},()=>{\r\n            if(this.state.playStatus) {\r\n                this.refs.audio.pause()\r\n            } else {\r\n                this.refs.audio.play()\r\n            }\r\n        })\r\n    }\r\n\r\n    // 获取音乐播放地址\r\n    getPlayUrl(){\r\n        this.$http.get('/song/url',{\r\n            params:{id:this.props.match.params.id}\r\n        }).then(res=>{\r\n            this.setState({playUrl:res.data[0].url})\r\n        })\r\n    }\r\n\r\n    // 获取歌词\r\n    getLyric(){\r\n        this.$http.get('/lyric',{\r\n            params:{id:this.props.match.params.id}\r\n        }).then(res=>{\r\n            let lyric = this.lyricFmt(res.lrc.lyric)\r\n            this.setState({lyric:lyric})\r\n        })\r\n    }\r\n    lyricFmt(lyric){\r\n        let reg = /(\\[.*\\])(.*)/g\r\n        let arr = []\r\n        lyric.replace(reg,function(all,first,second){\r\n            if(second !== '') {\r\n                arr.push(second)\r\n            }\r\n        })\r\n        return arr\r\n    }\r\n\r\n    UNSAFE_componentWillMount(){\r\n        this.getSongDetail()\r\n        this.getPlayUrl()\r\n        this.getLyric()\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"play-container\">\r\n                <div className=\"play-tool\" style={{transform:this.state.playStatus?'rotate(-15deg)':'rotate(0deg)'}}></div>\r\n                <div className=\"play-box\">\r\n                    <img src={this.state.songInfo.picUrl} alt=\"\"/>\r\n                    <div onClick={()=>this.toggle()} className={this.state.playStatus?'btn-pause':'btn-play'}></div>\r\n                </div>\r\n                <div className=\"content\">\r\n                    <h2>{this.state.songInfo.name}</h2>\r\n                    {\r\n                        this.state.lyric.map((item,index)=>{\r\n                           return <p key={index}>{item}</p>\r\n                        })\r\n                    }\r\n                </div>\r\n                {/* 音乐播放标签，隐藏 */}\r\n                <audio ref=\"audio\" src={this.state.playUrl} style={{display:'none'}}></audio>\r\n            </div>\r\n        )\r\n    }\r\n    componentWillUnmount(){\r\n        this.setState=()=>{\r\n            return false\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":""}