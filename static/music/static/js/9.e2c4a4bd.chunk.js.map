{"version":3,"sources":["pages/Search.jsx"],"names":["Search","state","keywords","list","hotSearch","e","this","setState","target","value","keyCode","search","trim","message","error","$http","get","params","then","res","result","songs","hots","val","className","onKeyUp","submit","onChange","keywordsChange","size","placeholder","prefix","map","item","index","onClick","clickBtn","first","dataSource","renderItem","Item","props","history","push","id","actions","style","fontSize","name","Component"],"mappings":"iTAKqBA,E,4MACjBC,MAAQ,CAEJC,SAAU,GAEVC,KAAM,GAENC,UAAW,I,oDAEf,SAAeC,GACXC,KAAKC,SAAS,CAAEL,SAAUG,EAAEG,OAAOC,U,oBAEvC,SAAOJ,GACe,KAAdA,EAAEK,SACFJ,KAAKK,W,oBAIb,WAAU,IAAD,OACL,GAAmC,KAA/BL,KAAKL,MAAMC,SAASU,OACpB,OAAOC,IAAQC,MAAM,oDAEzBR,KAAKS,MAAMC,IAAI,UAAW,CACtBC,OAAQ,CACJf,SAAUI,KAAKL,MAAMC,YAE1BgB,MAAK,SAAAC,GACJ,EAAKZ,SAAS,CAAEJ,KAAMgB,EAAIC,OAAOC,a,uBAIzC,WAAa,IAAD,OACRf,KAAKS,MAAMC,IAAI,eAAeE,MAAK,SAAAC,GAC/B,EAAKZ,SAAS,CAAEH,UAAWe,EAAIC,OAAOE,Y,uCAI9C,WACIhB,KAAKF,c,sBAIT,SAASmB,GAAK,IAAD,OACTjB,KAAKC,SAAS,CAACL,SAASqB,IACxBjB,KAAKS,MAAMC,IAAI,UAAW,CACtBC,OAAQ,CACJf,SAAUqB,KAEfL,MAAK,SAAAC,GACJ,EAAKZ,SAAS,CAAEJ,KAAMgB,EAAIC,OAAOC,a,oBAIzC,WAAU,IAAD,OACL,OACI,sBAAKG,UAAU,mBAAf,UAEI,cAAC,IAAD,CAAOf,MAAOH,KAAKL,MAAMC,SAAUuB,QAAS,SAACpB,GAAQ,EAAKqB,OAAOrB,IAAMsB,SAAU,SAACtB,GAAQ,EAAKuB,eAAevB,IAAMmB,UAAU,MAAMK,KAAK,QAAQC,YAAY,uCAASC,OAAQ,cAAC,IAAD,MAC9K,cAAC,IAAD,IAEA,qBAAKP,UAAU,YAAf,SAEQlB,KAAKL,MAAMG,UAAU4B,KAAI,SAACC,EAAMC,GAC5B,OAAO,cAAC,IAAD,CAAQC,QAAS,WAAK,EAAKC,SAASH,EAAKI,QAAqBb,UAAU,UAAxE,SAAmFS,EAAKI,OAAjCH,QAK1E,cAAC,IAAD,IACA,cAAC,IAAD,CACIL,KAAK,QACLS,WAAYhC,KAAKL,MAAME,KACvBoC,WAAY,SAAAN,GAAI,OAAI,cAAC,IAAKO,KAAN,CAAWL,QAAS,kBAAI,EAAKM,MAAMC,QAAQC,KAAnB,gBAAiCV,EAAKW,MAAOC,QAAS,CAAC,cAAC,IAAD,CAAoBC,MAAO,CAAEC,SAAU,OAAtH,SAAkId,EAAKe,e,kCAK3K,WACI1C,KAAKC,SAAS,WACV,OAAO,O,GA/EiB0C","file":"static/js/9.e2c4a4bd.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Input, message, Divider, Button, List } from 'antd';\r\nimport { UserOutlined,PlayCircleOutlined } from '@ant-design/icons';\r\n\r\nimport '../assets/css/search.css'\r\nexport default class Search extends Component {\r\n    state = {\r\n        // 关键词\r\n        keywords: '',\r\n        // 搜索结果\r\n        list: [],\r\n        // 热门搜索\r\n        hotSearch: []\r\n    }\r\n    keywordsChange(e) {\r\n        this.setState({ keywords: e.target.value })\r\n    }\r\n    submit(e) {\r\n        if (e.keyCode === 13) {\r\n            this.search()\r\n        }\r\n    }\r\n    // 搜索接口\r\n    search() {\r\n        if (this.state.keywords.trim() === '') {\r\n            return message.error('请输入搜索关键词');\r\n        }\r\n        this.$http.get('/search', {\r\n            params: {\r\n                keywords: this.state.keywords\r\n            }\r\n        }).then(res => {\r\n            this.setState({ list: res.result.songs })\r\n        })\r\n    }\r\n    // 热门搜索\r\n    hotSearch() {\r\n        this.$http.get('/search/hot').then(res => {\r\n            this.setState({ hotSearch: res.result.hots })\r\n        })\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.hotSearch()\r\n    }\r\n    \r\n    // 点击热词\r\n    clickBtn(val){\r\n        this.setState({keywords:val})\r\n        this.$http.get('/search', {\r\n            params: {\r\n                keywords: val\r\n            }\r\n        }).then(res => {\r\n            this.setState({ list: res.result.songs })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"search-container\">\r\n                {/* 搜索框 */}\r\n                <Input value={this.state.keywords} onKeyUp={(e) => { this.submit(e) }} onChange={(e) => { this.keywordsChange(e) }} className=\"inp\" size=\"large\" placeholder=\"请输入关键词\" prefix={<UserOutlined />} />\r\n                <Divider />\r\n                {/* 热词 */}\r\n                <div className=\"hot-group\">\r\n                    {\r\n                        this.state.hotSearch.map((item, index) => {\r\n                            return <Button onClick={()=>{this.clickBtn(item.first)}} key={index} className='hot-btn'>{item.first}</Button>\r\n                        })\r\n                    }\r\n                </div>\r\n                {/* 搜索结果 */}\r\n                <Divider />\r\n                <List\r\n                    size=\"large\"\r\n                    dataSource={this.state.list}\r\n                    renderItem={item => <List.Item onClick={()=>this.props.history.push(`/play/${item.id}`)} actions={[<PlayCircleOutlined style={{ fontSize: 22 }} />]}>{item.name}</List.Item>}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n    componentWillUnmount(){\r\n        this.setState=()=>{\r\n            return false\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":""}